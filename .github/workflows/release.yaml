name: Auto Release

on:
  push:
    branches: public-test
  pull_request:
    branches: main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event_name == 'push' && github.ref || github.event.pull_request.base.ref }}

    - name: Parse changelog and set variables
      id: changelog
      run: |
        if [ "${{ github.event_name }}" = "push" ]; then
          BRANCH="${GITHUB_REF#refs/heads/}"
        else
          BRANCH="${{ github.event.pull_request.base.ref }}"
        fi
        echo "Target branch: $BRANCH"
        echo "branch=$BRANCH" >> $GITHUB_OUTPUT
        
        version_line=$(grep -m1 -E "^[0-9]{4}\.[0-9]{2}\.[0-9]{2} for" change.log)
        if [ -z "$version_line" ]; then
          echo "Error: No version line found in change.log"
          exit 1
        fi
        echo "Version line: $version_line"

        tag=$(echo "$version_line" | grep -o '`v[^`]*`' | sed 's/`//g')
        if [ -z "$tag" ]; then
          echo "Error: No tag found in version line"
          exit 1
        fi
        echo "Tag: $tag"

        title=$(echo "$version_line" | sed -E 's/^[0-9]{4}\.[0-9]{2}\.[0-9]{2} for (.*) `.*`/\1/')
        echo "Title: $title"

        notes=$(awk -v version_line="$version_line" '
          $0 ~ version_line { found=1; next }
          found && /^[[:space:]]*$/ { exit }
          found && /^\*/ { print }
        ' change.log | sed 's/^\* /- /')

        if [ -z "$notes" ]; then
          echo "Error: No notes found"
          exit 1
        fi
        echo "Notes:"
        echo "$notes"

        echo "tag=$tag" >> $GITHUB_OUTPUT
        echo "title=$title $tag" >> $GITHUB_OUTPUT
        echo "notes<<EOF" >> $GITHUB_OUTPUT
        echo "$notes" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create mkmod
      run: |
        
        zip -0 -r MK_L10N_CHS.mkmod \
          gui/fonts/SourceHanSansCN_WN_Bold.ttf \
          gui/fonts/SourceHanSansCN_WN_Medium.ttf \
          texts/ru/LC_MESSAGES/global.mo \
          change.log \
          LICENSE \
          locale_config.xml \
          meta.xml

    - name: Create Release
      if: github.event_name == 'push'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.changelog.outputs.tag }}
        name: ${{ steps.changelog.outputs.title }}
        body: ${{ steps.changelog.outputs.notes }}
        files: MK_L10N_CHS.mkmod
        draft: false
        prerelease: ${{ contains(github.ref, 'public-test') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
