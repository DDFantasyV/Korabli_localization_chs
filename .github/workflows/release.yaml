name: Auto Release

on:
  push:
    branches: public-test
  pull_request:
    branches: main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event_name == 'push' && github.ref || github.event.pull_request.base.ref }}

    - name: Determine target branch
      id: branch
      run: |
        if [ "${{ github.event_name }}" = "push" ]; then
          BRANCH="${GITHUB_REF#refs/heads/}"
        else
          BRANCH="${{ github.event.pull_request.base.ref }}"
        fi
        echo "Target branch: $BRANCH"
        echo "branch=$BRANCH" >> $GITHUB_OUTPUT

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Parse changelog and set variables
      id: changelog
      run: |
        python << EOF
        import re
        
        with open('change.log', 'r', encoding='utf-8') as f:
            content = f.read()
        
        pattern = r'(\d{4}\.\d{2}\.\d{2}) for (.*?) `(v[^`]+)`\s*\n((?:\s*\* .*\n)+)'
        match = re.search(pattern, content)
        
        if match:
            date, title_part, tag, notes = match.groups()
            
            title = title_part.strip()
            notes = notes.strip().replace('* ', '- ')
            
            with open('$GITHUB_OUTPUT', 'a') as f:
                f.write(f"tag={tag}\n")
                f.write(f"title={title} {tag}\n")
                f.write(f"notes<<EOF\n{notes}\nEOF\n")
            
            print(f"Extracted tag: {tag}")
            print(f"Extracted title: {title} {tag}")
            print("Extracted notes:")
            print(notes)
        else:
            print("Error: Could not parse change.log")
            exit(1)
        EOF

    - name: Create mkmod
      run: |
        
        zip -0 -r MK_L10N_CHS.mkmod \
          gui/fonts/SourceHanSansCN_WN_Bold.ttf \
          gui/fonts/SourceHanSansCN_WN_Medium.ttf \
          texts/ru/LC_MESSAGES/global.mo \
          change.log \
          LICENSE \
          locale_config.xml \
          meta.xml

    - name: Create Release
      if: github.event_name == 'push'
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.changelog.outputs.tag }}
        name: ${{ steps.changelog.outputs.title }}
        body: ${{ steps.changelog.outputs.notes }}
        artifacts: MK_L10N_CHS.mkmod
        draft: false
        prerelease: ${{ steps.branch.outputs.branch == 'public-test' }}
        token: ${{ secrets.GITHUB_TOKEN }}
